name: ALZ-Bicep-4a Workflow

on:
  push:
    branches:
      - "main"
    paths:
      - "config/custom-parameters/resourceGroupConnectivity.parameters.all.json"
      - "config/custom-parameters/hubNetworking.parameters.all.json"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ENV_FILE: ".env"

jobs:
  ALZ_Bicep_4a_Workflow_Job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Remove Quotation Marks from Environment File"
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Write-Host $ENV_FILE
            (Get-Content -Path $env:ENV_FILE -Encoding UTF8) | ForEach-Object {$_ -replace '"',''} | Out-File -FilePath $env:ENV_FILE -Encoding UTF8
          azPSVersion: "latest"

      - name: Import Environment Variables from File
        run: cat ${{ env.ENV_FILE }} >> $GITHUB_ENV

      - name: "Install Az.Resources preview version"
        uses: azure/powershell@v1
        with:
          inlineScript: |
              (Get-ChildItem Env:/PSModulePath | Select-Object -ExpandProperty Value) -split ":"
              $modulePath = Split-Path (Split-Path (Split-Path (Get-Module -Name Az.Resources -ListAvailable)[0].Path))
              $moduleFilePath = Join-Path $modulePath -ChildPath StacksPS_9.1.10.zip
              Write-Host "Downloading module to path $modulePath"
              Invoke-WebRequest -Method Get -Uri "https://janegilring.blob.core.windows.net/demos/StacksPS_9.1.10.zip?sp=r&st=2023-06-09T19:17:04Z&se=2023-10-01T03:17:04Z&spr=https&sv=2022-11-02&sr=b&sig=da5nXndb4LYFsD5AVbPETIbsYw33RdBFpkw8bAFsTc4%3D" -OutFile $moduleFilePath
              if (Test-Path -Path $modulePath) {
                Expand-Archive -Path $moduleFilePath -DestinationPath $modulePath -ErrorAction SilentlyContinue -Force
                Copy-Item -Path "$modulePath/StacksPS_9.1.10/bin/modules/Az.Resources" -Destination "$modulePath/Az.Resources/9.10" -Recurse
              }
              Get-Module -Name Az.Resources -ListAvailable
          azPSVersion: "latest"

      - name: OIDC Login to Tenant
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ env.CONNECTIVITY_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: "Deploy ALZ Connectivity Stack"
        uses: azure/powershell@v1
        with:
          inlineScript: |
            .\pipeline-scripts\04-Deploy-ALZ-ConnectivityStack-HubAndSpoke.ps1
          azPSVersion: "latest"
